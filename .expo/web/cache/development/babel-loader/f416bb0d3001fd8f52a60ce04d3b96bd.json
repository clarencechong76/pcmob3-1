{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mobiletime/Desktop/pcmob3-1/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport BlockRGB from \"./Components/BlockRGB.js\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorArray = _useState2[0],\n      setColorArray = _useState2[1];\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"DetailsScreen\", _objectSpread({}, item));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, React.createElement(BlockRGB, {\n      red: item.red,\n      green: item.green,\n      blue: item.blue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: addColor,\n          title: \"Add colour\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 24\n          }\n        });\n      }\n    });\n  });\n\n  function addColor() {\n    setColorArray([].concat(_toConsumableArray(colorArray), [{\n      red: Math.floor(Math.random() * 256),\n      green: Math.floor(Math.random() * 256),\n      blue: Math.floor(Math.random() * 256),\n      id: \"\" + colorArray.length\n    }]));\n  }\n\n  function reset() {\n    setColorArray([]);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      height: 40,\n      justifyContent: \"center\"\n    },\n    onPress: addColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Add colour\")), React.createElement(TouchableOpacity, {\n    style: {\n      height: 40,\n      justifyContent: \"center\"\n    },\n    onPress: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Reset\")), React.createElement(FlatList, {\n    style: styles.list,\n    data: colorArray,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Colour List\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"DetailsScreen\",\n    component: DetailsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction DetailsScreen(_ref3) {\n  var route = _ref3.route;\n  var _route$params = route.params,\n      red = _route$params.red,\n      green = _route$params.green,\n      blue = _route$params.blue;\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Red: \", red), React.createElement(Text, {\n    style: styles.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Green: \", green), React.createElement(Text, {\n    style: styles.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Blue: \", blue)));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  list: {\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/mobiletime/Desktop/pcmob3-1/App.js"],"names":["StatusBar","React","createStackNavigator","NavigationContainer","BlockRGB","useState","useEffect","HomeScreen","navigation","colorArray","setColorArray","renderItem","item","navigate","red","green","blue","setOptions","headerRight","addColor","Math","floor","random","id","length","reset","styles","container","height","justifyContent","color","list","Stack","App","DetailsScreen","route","params","backgroundColor","padding","detailText","StyleSheet","create","flex","alignItems","width"],"mappings":";;;;;;;;;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,SAASC,UAAT,OAAkC;AAAA;;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAElC,kBAAoCH,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AACA,WAASC,UAAT,QAA8B;AAAA,QAARC,IAAQ,SAARA,IAAQ;AAC5B,WACE,oBAAC,gBAAD;AAEA,MAAA,OAAO,EAAE;AAAA,eAAMJ,UAAU,CAACK,QAAX,CAAoB,eAApB,oBAA0CD,IAA1C,EAAN;AAAA,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACE,GAApB;AAAyB,MAAA,KAAK,EAAEF,IAAI,CAACG,KAArC;AAA4C,MAAA,IAAI,EAAEH,IAAI,CAACI,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAEDV,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,UAAU,CAACS,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAE;AAAA,eAAM,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,QAAjB;AAA2B,UAAA,KAAK,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AADO,KAAtB;AAID,GALQ,CAAT;;AAOA,WAASA,QAAT,GAAoB;AAClBT,IAAAA,aAAa,8BACRD,UADQ,IAEX;AACEK,MAAAA,GAAG,EAAEM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADP;AAEEP,MAAAA,KAAK,EAAEK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAFT;AAGEN,MAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAHR;AAIEC,MAAAA,EAAE,OAAKd,UAAU,CAACe;AAJpB,KAFW,GAAb;AASD;;AACD,WAASC,KAAT,GAAiB;AACff,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,cAAc,EAAE;AAA9B,KADT;AAEE,IAAA,OAAO,EAAEV,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,EAQE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,cAAc,EAAE;AAA9B,KADT;AAEE,IAAA,OAAO,EAAEJ,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CARF,EAcE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAAxB;AAA8B,IAAA,IAAI,EAAEtB,UAApC;AAAgD,IAAA,UAAU,EAAEE,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBC;;AAGD,IAAMqB,KAAK,GAAG9B,oBAAoB,EAAlC;AACA,eAAe,SAAS+B,GAAT,GAAe;AAC5B,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAE1B,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,eAAnB;AAAmC,IAAA,SAAS,EAAE2B,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQC;;AAED,SAASA,aAAT,QAAkC;AAAA,MAATC,KAAS,SAATA,KAAS;AAEhC,sBAA6BA,KAAK,CAACC,MAAnC;AAAA,MAAQtB,GAAR,iBAAQA,GAAR;AAAA,MAAaC,KAAb,iBAAaA,KAAb;AAAA,MAAoBC,IAApB,iBAAoBA,IAApB;AAEA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLU,MAAM,CAACC,SADF,EAEL;AAAEU,MAAAA,eAAe,WAASvB,GAAT,UAAiBC,KAAjB,UAA2BC,IAA3B;AAAjB,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsB,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsCzB,GAAtC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACa,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwCxB,KAAxC,CAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACa,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAuCvB,IAAvC,CAHF,CANF,CADF;AAcA;;AACJ,IAAMU,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAChCd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETL,IAAAA,eAAe,EAAE,MAFR;AAGTM,IAAAA,UAAU,EAAE,QAHH;AAITd,IAAAA,cAAc,EAAE;AAJP,GADqB;AAOhCE,EAAAA,IAAI,EAAC;AAACa,IAAAA,KAAK,EAAC;AAAP;AAP2B,CAAlB,CAAf","sourcesContent":[" \nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { FlatList, StyleSheet, Text, View, TouchableOpacity, Button } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport BlockRGB from \"./Components/BlockRGB.js\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction HomeScreen({navigation}) {\n\nconst [colorArray, setColorArray] = useState([]);\nfunction renderItem({ item }) {\n  return (\n    <TouchableOpacity\n\n    onPress={() => navigation.navigate(\"DetailsScreen\", { ...item })}\n    >\n      <BlockRGB red={item.red} green={item.green} blue={item.blue} />\n    </TouchableOpacity>\n  );\n}\n\nuseEffect(() => {\n  navigation.setOptions({\n    headerRight: () => <Button onPress={addColor} title=\"Add colour\" />,\n  });\n\n});\n\nfunction addColor() {\n  setColorArray([\n    ...colorArray,\n    {\n      red: Math.floor(Math.random() * 256),\n      green: Math.floor(Math.random() * 256),\n      blue: Math.floor(Math.random() * 256),\n      id: `${colorArray.length}`,\n    },\n  ]);\n}\nfunction reset() {\n  setColorArray([]);\n}\nreturn (\n  <View style={styles.container}>\n    <TouchableOpacity\n      style={{ height: 40, justifyContent: \"center\" }}\n      onPress={addColor}\n    >\n      <Text style={{ color: \"red\" }}>Add colour</Text>\n    </TouchableOpacity>\n\n    <TouchableOpacity\n      style={{ height: 40, justifyContent: \"center\" }}\n      onPress={reset}\n    >\n      <Text style={{ color: \"red\" }}>Reset</Text>\n    </TouchableOpacity>\n    <FlatList style={styles.list} data={colorArray} renderItem={renderItem} />\n  </View>\n);\n}\n\n\nconst Stack = createStackNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Colour List\" component={HomeScreen} />\n        <Stack.Screen name=\"DetailsScreen\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n  }\n\n  function DetailsScreen({ route }) {\n    // Destructure this object so we don't have to type route.params.red etc\n    const { red, green, blue } = route.params;\n   \n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: `rgb(${red}, ${green}, ${blue})` },\n        ]}\n      >\n        <View style={{ padding: 30 }}>\n          <Text style={styles.detailText}>Red: {red}</Text>\n          <Text style={styles.detailText}>Green: {green}</Text>\n          <Text style={styles.detailText}>Blue: {blue}</Text>\n        </View>\n      </View>\n    );\n   }\nconst styles = StyleSheet.create({\n container: {\n   flex: 1,\n   backgroundColor: \"#fff\",\n   alignItems: \"center\",\n   justifyContent: \"center\",\n },\n list:{width:\"100%\"}\n});\n"]},"metadata":{},"sourceType":"module"}