{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mobiletime/Desktop/pcmob3-1/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport BlockRGB from \"./Components/BlockRGB.js\";\nimport { useState } from \"react\";\n\nfunction HomeScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorArray = _useState2[0],\n      setColorArray = _useState2[1];\n\n  function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(BlockRGB, {\n      red: item.red,\n      green: item.green,\n      blue: item.blue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 10\n      }\n    });\n  }\n\n  function addColor() {\n    setColorArray([].concat(_toConsumableArray(colorArray), [{\n      red: Math.floor(Math.random() * 256),\n      green: Math.floor(Math.random() * 256),\n      blue: Math.floor(Math.random() * 256),\n      id: \"\" + colorArray.length\n    }]));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      height: 40,\n      justifyContent: \"center\"\n    },\n    onPress: addColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Add colour\")), React.createElement(TouchableOpacity, {\n    style: {\n      height: 40,\n      justifyContent: \"center\"\n    },\n    onPress: addColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Reset\")), React.createElement(FlatList, {\n    style: styles.list,\n    data: colorArray,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, React.createElement(FlatList, {\n    style: styles.list,\n    data: colorArray,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  list: {\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/mobiletime/Desktop/pcmob3-1/App.js"],"names":["StatusBar","React","createStackNavigator","NavigationContainer","BlockRGB","useState","HomeScreen","colorArray","setColorArray","renderItem","item","red","green","blue","addColor","Math","floor","random","id","length","styles","container","height","justifyContent","color","list","Stack","App","StyleSheet","create","flex","backgroundColor","alignItems","width"],"mappings":"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","sourcesContent":[" \nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { FlatList, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport BlockRGB from \"./Components/BlockRGB.js\";\nimport { useState } from \"react\";\n\nfunction HomeScreen() {\nconst [colorArray, setColorArray] = useState([\n\n\n\n]);\n\nfunction renderItem({ item }) {\n  return <BlockRGB red={item.red} green={item.green} blue={item.blue} />;\n}\nfunction addColor() {\n  setColorArray([\n    ...colorArray,\n    {\n      red: Math.floor(Math.random() * 256),\n      green: Math.floor(Math.random() * 256),\n      blue: Math.floor(Math.random() * 256),\n      id: `${colorArray.length}`,\n    },\n  ]);\n}\n\nreturn (\n  <View style={styles.container}>\n    <TouchableOpacity\n      style={{ height: 40, justifyContent: \"center\" }}\n      onPress={addColor}\n    >\n      <Text style={{ color: \"red\" }}>Add colour</Text>\n    </TouchableOpacity>\n\n    <TouchableOpacity\n      style={{ height: 40, justifyContent: \"center\" }}\n      onPress={addColor}\n    >\n      <Text style={{ color: \"red\" }}>Reset</Text>\n    </TouchableOpacity>\n    <FlatList style={styles.list} data={colorArray} renderItem={renderItem} />\n  </View>\n);\n\n\n return (\n   <View style={styles.container}>\n     <FlatList style={styles.list} data={colorArray} renderItem={renderItem} />\n   </View>\n );\n}\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n return (\n   <NavigationContainer>\n     <Stack.Navigator>\n       <Stack.Screen name=\"Home\" component={HomeScreen} />\n     </Stack.Navigator>\n   </NavigationContainer>\n );\n}\n\nconst styles = StyleSheet.create({\n container: {\n   flex: 1,\n   backgroundColor: \"#fff\",\n   alignItems: \"center\",\n   justifyContent: \"center\",\n },\n list:{width:\"100%\"}\n});\n"]},"metadata":{},"sourceType":"module"}